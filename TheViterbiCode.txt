	The current viterbi code is viterbi_L2UTR.cpp. This code takes the posterior probabilities given by xrate and uses them to generate the most likey gene annotation that follows the grammar rules and doesn't have any stop codon spliced over introns. It runs the viterbi algorithm on each node as a loop across rows with one addition. At each position it checks the sequence to see which intron/exon letter we will use (eg whether it would be j or t.) For instance the e to t transition is only allowed if the exon ends with a t. Since we only care about the bases at the beginning of a feature any letter is allowed to transition to itself regardless of the sequence and no exon letter can transition to a different exon letter, and likewise with introns. At each sequence position and for each letter we find the best score ending with that letter and the sequence that has that score. This way we are able to perform the traceback step as we perform the main step.